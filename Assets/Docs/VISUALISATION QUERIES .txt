-- VISUAL 1
-- Which is the most popular media type?

SELECT  MediaType.MediaTypeId,
		MediaType.Name,
		COUNT(*) AS MediaType_cOUNT
FROM Track
JOIN MediaType
ON MediaType.MediaTypeId = Track.MediaTypeId
GROUP BY MediaType.MediaTypeId
ORDER BY 3 DESC;


-- VISUAL 2
  -- Who is writing the rock music?
  -- Write a query that returns the Artist name and total track count of the top 10 rock bands.

SELECT  Artist.ArtistId,
		Artist.Name,
		COUNT(*) AS Genre_Count
FROM Track
JOIN Genre 
ON Genre.GenreId = Track.GenreId
JOIN Album
ON Album.AlbumId = Track.AlbumId
JOIN Artist
ON Artist.ArtistId = Album.ArtistId
WHERE Genre.GenreId = 1
GROUP BY Artist.ArtistId
ORDER BY 3 DESC
LIMIT 10;


-- VISUAL 3
--   Top 10 Country Total_Spent By MediaType and Spending Categories

SELECT  
    MediaType.MediaTypeId,
    MediaType.Name,
    Invoice.BillingCountry,
    SUM(InvoiceLine.Quantity * InvoiceLine.UnitPrice) AS Total_Spent,
    CASE 
        WHEN SUM(InvoiceLine.Quantity * InvoiceLine.UnitPrice) > 250 THEN 'High Spender'
        WHEN SUM(InvoiceLine.Quantity * InvoiceLine.UnitPrice) BETWEEN 100 AND 250 THEN 'Medium Spender'
        ELSE 'Low Spender'
    END AS Spending_Category
FROM MediaType
JOIN Track
    ON MediaType.MediaTypeId = Track.MediaTypeId
JOIN InvoiceLine
    ON InvoiceLine.TrackId = Track.TrackId
JOIN Invoice
    ON Invoice.InvoiceId = InvoiceLine.InvoiceId
JOIN Customer
    ON Customer.CustomerId = Invoice.CustomerId
GROUP BY MediaType.MediaTypeId, MediaType.Name, Invoice.BillingCountry
ORDER BY Total_Spent DESC
LIMIT 10;


-- VISUAL 4
-- Top 3 Most Sold Album by Innovice.Total and  Count of Customers that contributed invoice total for each year
-- with Max data = 2013-12-22 and min date = 2009-01-01
N.B I initial felt like InvoiceLine 

WITH AlbumSales AS (
    SELECT  
        Album.AlbumId,
        Album.Title AS AlbumTitle,
        strftime('%Y', Invoice.InvoiceDate) AS Year,
        SUM(InvoiceLine.Quantity * InvoiceLine.UnitPrice) AS TotalSales,
        COUNT(DISTINCT Invoice.CustomerId) AS CustomerCount
    FROM Invoice
    JOIN InvoiceLine
        ON Invoice.InvoiceId = InvoiceLine.InvoiceId
    JOIN Track
        ON InvoiceLine.TrackId = Track.TrackId
    JOIN Album
        ON Track.AlbumId = Album.AlbumId
    WHERE Invoice.InvoiceDate BETWEEN '2009-01-01' AND '2013-12-22'
    GROUP BY Album.AlbumId, Album.Title, Year
),
RankedAlbums AS (
    SELECT 
        AlbumId,
        AlbumTitle,
        Year,
        TotalSales,
        CustomerCount,
        RANK() OVER (PARTITION BY Year ORDER BY TotalSales DESC) AS SalesRank
    FROM AlbumSales
)
SELECT 
    AlbumTitle,
    Year,
    TotalSales,
    CustomerCount
FROM RankedAlbums
WHERE SalesRank <= 3
ORDER BY Year, TotalSales DESC;